services:
  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    entrypoint: /bin/sh -c "ollama serve & sleep 2 && ollama pull mistral & wait"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - ragnet
    # Uncomment if using GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           capabilities: [gpu]

  backend:
    build: .
    container_name: rag_backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_started
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ragnet

  db:
    image: ankane/pgvector:latest
    container_name: rag_db
    restart: always
    environment:
      POSTGRES_USER: newuser
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ragdb
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "newuser", "-d", "ragdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ragnet

volumes:
  pgdata:
  ollama_data:

networks:
  ragnet: